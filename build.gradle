group 'rainMakers.v.0.1'
version '0.1'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.codehaus.gpars:gpars:1.2.1",
                "net.masterthought:cucumber-reporting:0.0.23"
    }
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

repositories {
    maven {
        url "http://repo.bodar.com/"
    }
}

dependencies {
    compile group:'com.googlecode.totallylazy', name:'totallylazy', version:'${LATEST_VERSION}'
}

tasks.withType(JavaExec) {
    systemProperty "env", System.getProperty("env")
    systemProperty "browser", System.getProperty("browser")
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
}

ext.cukesVersion ='1.2.5'

dependencies {
    compile group: 'net.masterthought', name: 'cucumber-reporting', version: '0.0.23'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.5.1'
    compile group: 'info.cukes', name: 'cucumber-junit', version: "$cukesVersion"
    compile group: 'info.cukes', name: 'cucumber-core', version: "$cukesVersion"
    compile group: 'info.cukes', name: 'cucumber-java8', version: "$cukesVersion"
    compile('org.apache.poi:poi:3.13')
    compile('org.apache.poi:poi-ooxml:3.13')
}

tasks.withType(JavaExec){
    systemProperty "env", System.getProperty("env")
    systemProperty "browser", System.getProperty("browser")
}

task wrapper(type: Wrapper){
    gradleVersion ='4.5.1'
}

task runInParallel() {
    doLast {
        runCucumberTests()
    }
}

def runCucumberTests() {
    def features = fileTree(dir: "${project.projectDir}/src/test/resources/features/").include '**/*.feature'


    GParsPool.withPool(4) {
        features.eachParallel { File file ->
            javaexec {
                ignoreExitValue = false
                main = "cucumber.api.cli.Main"
                org.gradle.jvm.Classpath = sourceSets.test.runtimeClasspath as Class<org.gradle.jvm.Classpath>
                args = ["-p", "pretty", "-p", "json:${Reporting.baseDir}/cucumber/${file.name}.json", "--glue", "steps", "-t", getTags("$tags"),
                        file.getAbsolutePath()]
                systemProperties = [
                        "env"    : System.getProperty("env"),
                        "browser": System.getProperty("browser")
                ]
            }
        }
    }
}

task generateReport() {

}

task runInSequence() {
    doLast {
        def arglist = ["-p", "pretty", "-p", "json:${Reporting.baseDir}/cucumber/cucumber.json", "--glue", "steps", "-t", getTags("$tags"),
                       "${project.projectDir}/src/test/resources/features"]

        javaexec {
            main = "cucumber.api.cli.Main"
            org.gradle.jvm.Classpath = sourceSets.test.runtimeClasspath as Class<org.gradle.jvm.Classpath>
            args = arglist
            systemProperties = [
                    "env"    : System.getProperty("env"),
                    "browser": System.getProperty("browser")
            ]
        }
    }
}

runInSequence.finalizedBy(generateReport)